buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'lego'
    version = '0.0.1-BETA'
    manifest {
        attributes 'Implementation-Title': 'Lego Search Repository',
                   'Implementation-Version': version,
                   'Main-Class': 'com.sanger.solr.Application'
    }
    
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.search.solr.Application'
}

repositories {
    mavenLocal();
    mavenCentral()
}

ext {
    solrCloudConnectVersion="1.2.5"
    solrJVersion="5.4.0"
}

// remove standard LogBack logging in favour of simple.logger
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    // Get App Status and Info
    compile("org.springframework.boot:spring-boot-starter-actuator")
    //compile('org.springframework.boot:spring-boot-starter-data-jpa')
    // Browser Framework
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // Used in Dev for Hot Swapping
    compile('org.springframework.boot:spring-boot-devtools')
    //compile('org.springframework.boot:spring-boot-starter-security')
   
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.7.5'
    
    //runtime('mysql:mysql-connector-java')
    
    compile "org.apache.solr:solr-solrj:$solrJVersion"
    compile("org.search.solr:solr-cloud-connect-all:$solrCloudConnectVersion")
    
    testCompile('org.springframework.boot:spring-boot-starter-test') 
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
